name: "Publish"

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

env:
  DOTNET_VERSION: '9.0'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          submodules: recursive

      # Verify commit exists in origin/main
      - name: Verify commit exists in origin/main
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/main

      # Set up .NET Core
      - name: Backend Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Cache .NET dependencies
      - name: Cache .NET Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj', '**/*.vbproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Install dependencies
      - name: Backend Install dependencies
        run: dotnet restore

      # Build and publish
      - name: Backend Build
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
          echo "Building version $VERSION"
          dotnet publish -c Release -o app -r linux-x64 --self-contained true /p:UseAppHost=true

      # Run tests
      - name: Test
        run: dotnet test --configuration Release --no-build
        env:
          VERSION: ${{ github.ref_name }}

      # Pack the project
      - name: Pack
        run: dotnet pack --configuration Release --no-build --output .
        env:
          VERSION: ${{ github.ref_name }}

      # Push the package to GitHub Packages
      - name: Push
        run: dotnet nuget push NgLoader.EFCore.Queries.${{ github.ref_name }}.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
