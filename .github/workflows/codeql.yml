name: "CodeQL"

on:
  workflow_dispatch:
  pull_request:
    paths:
    - '**.cs'
    - '**.csproj'
  push:
    paths:
      - '**.cs'
      - '**.csproj'
      - '.github/workflows/build-backend.yml'
  schedule:
    - cron: '0 8 * * 4'

env:
  DOTNET_VERSION: '9.0'

jobs:
  analyze:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    name: analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        submodules: recursive

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

      # Set up .NET Core
      - name: Backend Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Cache .NET dependencies
      - name: Cache .NET Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj', '**/*.vbproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Install backend dependencies
      - name: Backend Install dependencies
        run: dotnet restore

      # Build and publish backend
      - name: Backend Build
        run: dotnet publish -c Release -o ../app -r linux-x64 --self-contained true /p:UseAppHost=true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
